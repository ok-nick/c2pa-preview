name: publish
on:
  workflow_dispatch:
  push:
    branches:
      - release

# https://github.com/tauri-apps/tauri-action?tab=readme-ov-file#usage
jobs:
  publish:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          version: 1.0

      - name: install frontend dependencies
        uses: bahmutov/npm-install@v1
        with:
          working-directory: ./frontend

      - name: cache backend dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./backend -> target"

      - name: install Tauri CLI v2
        run: npm install -g @tauri-apps/cli@2.0.0-beta.15

      - name: install optional dependencies (npm bug fix)
        run: |
          npm install @rollup/rollup-linux-x64-gnu --prefix frontend --save-optional
          npm install @rollup/rollup-win32-x64-msvc --prefix frontend --save-optional

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          updaterJsonPreferNsis: true
          # specifying this overrides the default tauri-cli installer and uses our installed one above
          tauriScript: "tauri"
          args: ${{ matrix.settings.args }}
